# -*- coding: utf-8 -*-
"""Task 1: Data Cleaning and Preprocessing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sza9JF94Zt_OCJ29ZqAl8138lZ5SB066

# **CUSTOMER PERSONALITY ANALYSIS DATASET**

Loading the dataset
"""

import pandas as pd

# Load the dataset
df = pd.read_csv("marketing_campaign.csv", sep='\t')

"""Dataset before preprocessing

Top rows of the dataset
"""

df.head()

"""Bottom rows of the dataset"""

df.tail()

"""Checking whether the dataset contain null values."""

df.isnull().sum()

"""As only the 'Income' column contain null values, it's been handled using median imputation."""

# Fill missing income with the median
income_median = df['Income'].median()
df['Income'].fillna(income_median, inplace=True)

"""Null values present in the 'Income' column got filled with median."""

df.isnull().sum()

"""Checking whether the dataset contain duplicate values."""

# Check how many duplicate rows exist
duplicate_count = df.duplicated().sum()
print(f"Number of duplicate rows: {duplicate_count}")

df.head(30)

"""Finding the unique values present in 'Education' and 'Marital_Status' columns."""

print("Education Types:")
print(df['Education'].unique())

print("\nMarital Status Types:")
print(df['Marital_Status'].unique())

"""Finding the number of unique values present in 'Education' and 'Marital_Status' columns."""

print("Education Value Counts:")
print(df['Education'].value_counts())

print("\nMarital Status Value Counts:")
print(df['Marital_Status'].value_counts())

"""Standardizing both 'Education' and 'Marital_Status' columns."""

# Standardize 'education'
df['Education'] = df['Education'].replace({
    '2n Cycle': 'Master',
    'Graduation': 'Graduate'
})

# Standardize 'marital_status'
df['Marital_Status'] = df['Marital_Status'].replace({
    'Together': 'Married',
    'Alone': 'Single',
    'Widow': 'Widowed',
    'Absurd': 'Other',
    'YOLO': 'Other'
})

df.head(30)

df.dtypes

"""Renaming the column headers by lowercasing and no spaces."""

df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_').str.replace(r'[^\w\s]', '', regex=True)

df.head()

"""Converting the data type of 'dt_customer' column from object to datetime."""

df['dt_customer'] = pd.to_datetime(df['dt_customer'], format='%d-%m-%Y', errors='coerce')

df.head()

df.dtypes

"""Dataset after preprocessing"""

df.head(30)

df.to_csv('marketing_campaign_preprocessed.csv', index=False)

